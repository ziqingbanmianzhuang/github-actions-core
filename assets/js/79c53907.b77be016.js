"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[476],{8974:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>a,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>c,toc:()=>l});var t=n(4848),i=n(8453);const r={sidebar_position:4,title:"Cypress E2E Tests"},o=void 0,c={id:"cypress-e2e",title:"Cypress E2E Tests",description:"This action assumes the yarn package manager is used.",source:"@site/docs/cypress-e2e.md",sourceDirName:".",slug:"/cypress-e2e",permalink:"/github-actions-core/docs/cypress-e2e",draft:!1,unlisted:!1,editUrl:"https://github.com/paion-data/github-actions-core/tree/master/docs/docs/cypress-e2e.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,title:"Cypress E2E Tests"},sidebar:"actionListSidebar",previous:{title:"UI Unit Test",permalink:"/github-actions-core/docs/ui-unit-test"},next:{title:"NPM Release action",permalink:"/github-actions-core/docs/npm-release"}},a={},l=[];function d(e){const s={a:"a",admonition:"admonition",code:"code",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.admonition,{type:"info",children:(0,t.jsxs)(s.p,{children:["This action assumes the ",(0,t.jsx)(s.a,{href:"https://yarnpkg.com/",children:"yarn package manager"})," is used."]})}),"\n",(0,t.jsxs)(s.p,{children:["Cypress E2E action offers an easy way to automate, customize, and execute ",(0,t.jsx)(s.strong,{children:"parallel"})," end-to-end tests. The action\nprovides"]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["dependency installation via ",(0,t.jsx)(s.strong,{children:"yarn"}),","]}),"\n",(0,t.jsx)(s.li,{children:"scanning of test specs,"}),"\n",(0,t.jsx)(s.li,{children:"running each spec in parallel, and"}),"\n",(0,t.jsx)(s.li,{children:"upload test screenshots and video on test failure."}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:"The example below is a very simple setup:"}),"\n",(0,t.jsxs)(s.ol,{children:["\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:["Install Cypress with ",(0,t.jsx)(s.code,{children:"yarn add cypress --dev"})]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:["Initialize Cypress with ",(0,t.jsx)(s.code,{children:"yarn run cypress open"})]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.a,{href:"https://docs.cypress.io/guides/tooling/typescript-support/",children:"Support TypeScript"})}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:["Put all ",(0,t.jsx)(s.strong,{children:".spec.cy.ts"}),' test files under "cypress/e2e" directory']}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:["Install ",(0,t.jsx)(s.a,{href:"https://www.npmjs.com/package/wait-on",children:"wait-on"}),": ",(0,t.jsx)(s.code,{children:"yarn add -D wait-on"})]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:["Add the following script command to ",(0,t.jsx)(s.code,{children:"package.json"}),":"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-json",children:'{\n  ...\n\n  "scripts": {\n    "e2e": "cypress run --browser chrome",\n    "wait-on-dev": "wait-on http-get://localhost:3000/",\n    "wait-on-prod": "wait-on http-get://localhost:3000/"\n  },\n\n  ...\n}\n'})}),"\n",(0,t.jsx)(s.admonition,{type:"info",children:(0,t.jsx)(s.p,{children:"Note that we assume the UI is running at port 3000. Please adjust it accordingly if it's running at a different port."})}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsx)(s.p,{children:"Use Cypress E2E Tests workflow:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-yaml",children:'---\nname: CI/CD\n\n"on":\n  pull_request:\n  push:\n    branches:\n      - master\n\n  e2e-tests:\n    name: Unit Tests\n    needs: unit-tests\n    uses: paion-data/github-actions-core/.github/workflows/cypress-e2e.yml@master\n    with:\n      node-version: 18\n'})}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(s.admonition,{type:"tip",children:[(0,t.jsxs)(s.p,{children:["Inside the ",(0,t.jsx)(s.code,{children:"cypress-e2e"})," workflow, each ",(0,t.jsx)(s.a,{href:"https://docs.cypress.io/guides/core-concepts/writing-and-organizing-tests#Spec-files",children:"Cypress spec"})," is tested in 2 modes:"]}),(0,t.jsxs)(s.ol,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"yarn-start"}),": the web app is started using ",(0,t.jsx)(s.code,{children:"yarn start"})]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"server"}),": a production build is generated first using ",(0,t.jsx)(s.code,{children:"yarn build"})," and then the web app is started with\n",(0,t.jsx)(s.code,{children:"yarn serve"})]}),"\n"]}),(0,t.jsx)(s.p,{children:"The reason we run the same E2E in 2 separate modes is that we assume E2E testing consists of 2 logical parts:"}),(0,t.jsxs)(s.ol,{children:["\n",(0,t.jsx)(s.li,{children:"The logical tests defined by Cypress spec files"}),"\n",(0,t.jsx)(s.li,{children:"The same tests in the context of integration of web app logic and the production runtime github-actions-core"}),"\n"]}),(0,t.jsxs)(s.p,{children:["The app may work perfectly fine in E2E, but it's a different question when the same app is packaged up using,\nfor example, ",(0,t.jsx)(s.a,{href:"https://webpack.js.org/",children:"webpack"}),". The later could also be interpreted as integration tests against\nwebpack configuration which makes the tests more comprehensive"]})]})]})}function p(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>o,x:()=>c});var t=n(6540);const i={},r=t.createContext(i);function o(e){const s=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(r.Provider,{value:s},e.children)}}}]);