"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[873],{6951:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>d,frontMatter:()=>o,metadata:()=>r,toc:()=>a});var t=i(4848),s=i(8453);const o={sidebar_position:1,title:"Performing Style Check on YAML & Markdown Files and Link Check"},l=void 0,r={id:"yml-md-style-and-link-checks",title:"Performing Style Check on YAML & Markdown Files and Link Check",description:"[//]: # (Copyright Paion Data)",source:"@site/docs/yml-md-style-and-link-checks.md",sourceDirName:".",slug:"/yml-md-style-and-link-checks",permalink:"/github-actions-core/docs/yml-md-style-and-link-checks",draft:!1,unlisted:!1,editUrl:"https://github.com/paion-data/github-actions-core/tree/master/docs/docs/yml-md-style-and-link-checks.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Performing Style Check on YAML & Markdown Files and Link Check"},sidebar:"actionListSidebar",next:{title:"UI Code Style",permalink:"/github-actions-core/docs/ui-code-style"}},c={},a=[{value:"Configuring YAML File Style Check",id:"configuring-yaml-file-style-check",level:2},{value:"Configuring Markdown File Style Check",id:"configuring-markdown-file-style-check",level:2},{value:"Regular Configuration File",id:"regular-configuration-file",level:3},{value:"Rule Configuration File",id:"rule-configuration-file",level:3},{value:"Configuring Broken Link Check",id:"configuring-broken-link-check",level:2}];function h(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["Inspired by ",(0,t.jsx)(n.a,{href:"https://github.com/sous-chefs/.github/blob/main/.github/workflows/lint-unit.yml",children:"Sous Chefs"}),", this\n",(0,t.jsx)(n.a,{href:"https://docs.github.com/en/actions/using-workflows/reusing-workflows",children:"reusable workflow"})," performs the following code\nstyle checks:"]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/actionshub/yamllint",children:"YAML file style check"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/actionshub/markdownlint",children:"Markdown file style check"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.a,{href:"https://github.com/lycheeverse/lychee-action",children:"Broken link check"})}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Example Usage:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'name: CI/CD\n\n"on":\n  pull_request:\n  push:\n    branches:\n      - master\n\njobs:\n  yml-md-style-and-link-checks:\n    uses: paion-data/github-actions-core/.github/workflows/yml-md-style-and-link-checks.yml@master\n'})}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsx)(n.p,{children:"The configurations of the composing checks can be configured regularly by following their respective GitHub Actions\ndocumentations. The following sections discusses the configuration by example."})}),"\n",(0,t.jsx)(n.h2,{id:"configuring-yaml-file-style-check",children:"Configuring YAML File Style Check"}),"\n",(0,t.jsxs)(n.p,{children:["Create a file named ",(0,t.jsx)(n.strong,{children:".yamllint"})," at the root of the project with the following example content"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title=".yamllint"',children:'# Copyright Paion Data\n#\n# Licensed under the Apache License, Version 2.0 (the "License");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an "AS IS" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n---\nextends: default\nrules:\n  line-length:\n    max: 256\n    level: warning\n  document-start: disable\n  braces:\n    forbid: false\n    min-spaces-inside: 0\n    max-spaces-inside: 1\n    min-spaces-inside-empty: -1\n    max-spaces-inside-empty: -1\n'})}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsxs)(n.p,{children:["More configuration options can be found at ",(0,t.jsx)(n.a,{href:"https://yamllint.readthedocs.io/en/stable/",children:"yamllint documentation"})]})}),"\n",(0,t.jsx)(n.h2,{id:"configuring-markdown-file-style-check",children:"Configuring Markdown File Style Check"}),"\n",(0,t.jsx)(n.p,{children:"The markdown file style check is splitted into 2 config files:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"regular configuration file"}),"\n",(0,t.jsx)(n.li,{children:"rule configuration file"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"regular-configuration-file",children:"Regular Configuration File"}),"\n",(0,t.jsxs)(n.p,{children:["Create a file named ",(0,t.jsx)(n.strong,{children:".mdlrc"})," at the root of the project with the following content:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title=".mdlrc"',children:'rules "~MD002", "~MD005", "~MD007", "~MD013", "~MD041", "~MD029", "~MD033"\nstyle "#{File.dirname(__FILE__)}/markdownlint.rb"\n'})}),"\n",(0,t.jsxs)(n.p,{children:["In the example above, the first line above ",(0,t.jsx)(n.em,{children:"excludes"}),"\n",(0,t.jsx)(n.a,{href:"https://github.com/markdownlint/markdownlint/blob/main/docs/RULES.md",children:"specified rules"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["The second line specifies the ",(0,t.jsx)(n.a,{href:"#rule-configuration-file",children:"rule configuration file"})]}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsxs)(n.p,{children:["For more native config options, please refer to\n",(0,t.jsx)(n.a,{href:"https://github.com/markdownlint/markdownlint/blob/main/docs/configuration.md",children:"its documentations"})]})}),"\n",(0,t.jsx)(n.h3,{id:"rule-configuration-file",children:"Rule Configuration File"}),"\n",(0,t.jsxs)(n.p,{children:["We may need to adjust certain settings of some single rule by having another file named ",(0,t.jsx)(n.strong,{children:"markdownlint.rb"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ruby",metastring:'title="markdownlint.rb"',children:"# Copyright Paion Data\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nall\n# https://github.com/markdownlint/markdownlint/blob/main/docs/RULES.md\nrule 'MD003', style: :setext_with_atx\nrule 'MD004', style: :sublist\nrule 'MD013', line_length: 120\n"})}),"\n",(0,t.jsx)(n.p,{children:"In the last line of the exmaple above, we changed the max line length from its default (80) to 120"}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsxs)(n.p,{children:["More info about rule config can be found in\n",(0,t.jsx)(n.a,{href:"https://github.com/markdownlint/markdownlint/blob/main/docs/creating_rules.md",children:"its documentation"})]})}),"\n",(0,t.jsx)(n.h2,{id:"configuring-broken-link-check",children:"Configuring Broken Link Check"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.a,{href:"https://github.com/lycheeverse/lychee-action",children:"Broken link check"})," pretty much configures everything for us, so we don't need to configure anything unless we\nneed to exclude\n",(0,t.jsx)(n.a,{href:"https://github.com/lycheeverse/lychee-action#excluding-links-from-getting-checked",children:"links"})," or\n",(0,t.jsx)(n.a,{href:"https://github.com/lycheeverse/lychee-action",children:"file"})," by regular expression, in which case we would simply create a\n",(0,t.jsx)(n.strong,{children:".lycheeignore"})," file at our project root, for example:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ignore",metastring:'title=".lycheeignore"',children:"file:///*\n"})}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsxs)(n.p,{children:["The ignore rule in the example above skips checks of all relative links among files. This is common in\n",(0,t.jsx)(n.a,{href:"https://docusaurus.io/docs/markdown-features/links",children:"Docusaurus"}),"-based documentation"]})})]})}function d(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>r});var t=i(6540);const s={},o=t.createContext(s);function l(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);